<!doctype html>

<title>mact-Online Solidity IDE</title>
<meta charset="utf-8"/>
<link rel=stylesheet href="/static/css/docs.css">
<link rel="stylesheet" href="/static/css/codemirror.css">
<link rel="stylesheet" href="http://v3.bootcss.com/dist/css/bootstrap.min.css">
<script src="/static/js/codemirror.js"></script>
<script src="/static/js/javascript.js"></script>
<script src="/static/js/active-line.js"></script>
<script src="/static/js/mcat.js"></script>
<script src="https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js"></script>

<style type="text/css">
      .CodeMirror {border-top: 1px solid black; border-bottom: 1px solid black;height:600px;}
	  #form-up-sol,#open-file-input {display:none;} 
	  #operate-nav {height:44px;padding:10px;}
	  .file-list-li{text-align:left;padding-left:15px;}
	  .file-dir{text-align:left;font-size:18px;padding-left:10px;}
	  .file-list{background-color:#e8f2ff;}
	  .r-detail{word-wrap: break-word; word-break: normal;}
	  .glyphicon-remove{display:none;font-size:8px;width:5px;height:5px;}
	  .file-name{cursor: pointer;}
	  #console-header{background-color:#e8f2ff;}
	  .active{font-size:24px;}
</style>

<div id=nav>
  	<a href="https://github.com/luren5/mcat">
	<h1>mcat</h1>
	<img id=logo src="/static/images/logo.png">
	</a> 
	<ul><li><a class="active">{{.projectName}}</a></li></ul>
	<div id="operate-nav">
		<span class="glyphicon glyphicon-folder-open" aria-hidden="true" id="open-file"></span>
		<form action="/upload-file" enctype="multipart/form-data" method="post" id="form-up-sol">
			<input id="open-file-input" type="file" name="new_sol" />
		</form>
		<span class="glyphicon glyphicon-plus" aria-hidden="true" id="new-file"></span>		
		<span class="glyphicon glyphicon-refresh" aria-hidden="true" id="refresh-list"></span>
	</div>
	<ul class="file-list">
		<li class="file-dir">contracts </li>
		{{ if not .fileSet }}
			{{.error}}
		{{else}}
			{{range $v := .fileSet}}
			<li class="file-list-li">
			- <span class="file-name">{{$v}} &nbsp;&nbsp;</span>
			<span class="glyphicon glyphicon-remove" aria-hidden="true"></span> &nbsp;&nbsp;&nbsp;&nbsp;
			</li>
			{{end}}
		{{ end }}
	</ul>
	</div>

<article>
<h4 id="fileName">{{.fileName}}</h4>
<form>
		<textarea id="code" name="code">{{.fileContent}}</textarea>
</form>

<div id="console">
		<p id="console-header">here is header<p>
		<p id="console-notice"></p>
		<div id="console-res">
		</div>
</div>
</article>


<script>
var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
  mode: "javascript",
  styleActiveLine: true,
  lineNumbers: true,
  lineWrapping: true
});

$(document).ready(function(){
	$("#open-file").click(function() {
		$('#open-file-input').trigger("click");
	})

	$('#open-file-input').change(function() {
		$("#form-up-sol").submit()
	})

	$("#new-file").click(function() {
		var fileName = prompt("Please input file name.")	
		if(fileName) {
			$.get("/new-file/" + fileName, function(result){
					if(!result.status) {
						window.location = "/edit/"+fileName;
					} else {
						alert(result.msg)
					}	
			})
		}
		
	})

	$("#refresh-list").click(function() {
		$.get("/refresh-list", function(result) {
				if(result.status == 0) {
					$(".file-list-li").remove()			
					var msg = result.msg
					var l = msg.length
					for(var i = 0; i < l; i++) {
						var fileName = msg[i]	
						var node = '<li class="file-list-li">- <span class="file-name">'+ fileName + '&nbsp;&nbsp;</span><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> &nbsp;&nbsp;&nbsp;&nbsp;</li>'
						$(".file-list").append(node)
					}
				} 
		})	
	})

	// show/hide remove icon
	$(".file-name").mouseover(function(e) {
			var t = $(e.target)
			var fileName = t.text().replace(/^\s\s*/, '').replace(/\s\s*$/, '');
			$(".file-list .glyphicon-remove").hide()
			t.next(".glyphicon-remove").show()
	})
	// do remove
	$(".file-list").click(function(e){
		var t = $(e.target)
		if(t.hasClass("glyphicon-remove")) {
			fileName = t.prev().text().replace(/^\s\s*/, '').replace(/\s\s*$/, '');
			$.get("/remove-file/" + fileName, function() {
				var currentFile = $("#fileName").text() 	
				if(currentFile == fileName) {
					window.location.href = "/"
				} else {
					t.parent().remove()
				}
			})	
		}
	})

	// locate to edit file
	$(".file-name").click(function(e) {
		var t = $(e.target)
		var fileName = t.text()
		fileName = fileName.replace(/^\s\s*/, '').replace(/\s\s*$/, '');
		if(fileName) {
			window.location.href = "/edit/" + fileName
		}
	})

});

$(document).keyup(function(e){
	var key = e.which;
	var fileName = $("#fileName").html()			
	var content = editor.getValue()  
	
	if(!fileName || !content) {
		return 
	}
	var data = {"fileContent": content, "fileName":fileName}

	if(e.ctrlKey && e.which == 83) {
			$("#console").show()
			$("#console-notice").text("Saving file…")
			$("#console-res").text("")
			$.post("/save-file?r="+ Math.random(), data, function(result) {
				$("#console-res").text(result.msg)								
			})
	}


	if(e.ctrlKey && e.which == 66) { //ctrl + b
		// do compile
		$.post("/do-compile?r="+ Math.random(), data, function(result) {
			$("#console").show()
			$("#console-notice").text("Waiting for compiling…")
			$("#console-res").text("")
			$(".r-detail").remove()

			if(result.status == 0){

				var l = result.msg.length
				for(var i = 0; i < l; i++) {
					var msg = result.msg
					var r = msg[i]			
					var abi = r.abi
					var name = r.name
					var bin = r.bin

					var rContent = name + "<br/>abi:<br/> " + abi + "<br/>bin: " + bin + "<br/>"
					var node = $("<p class='r-detail'>" + rContent + "</p>")
					
					$("#console-res").append(node)
				}
			} else {
				var rContent = fileName + "<br/>" + result.msg 
				var node = $("<p class='r-detail'>" + rContent + "</p>")
				$("#console-res").append(node)
					
			}	
		})
	}
})

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms))
}


</script>

